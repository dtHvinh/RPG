using System.IO;
using UnityEditor;
using UnityEditorInternal;
using UnityEngine;

public static class TagAndLayerCodeGenerator
{
    private const string folderPath = "Assets/Generated/";
    private const string filePath = folderPath + "TagsAndLayers.cs";

    [MenuItem("Tools/Generate/Tags & Layers (Manual)")]
    public static void ManualGenerate()
    {
        Debug.Log("🔄 Generating TagsAndLayers.cs...");
        Generate();
        Debug.Log("✅ TagsAndLayers.cs auto-generated at " + filePath);
    }

    private static void Generate()
    {
        if (!Directory.Exists(folderPath))
        {
            Directory.CreateDirectory(folderPath);
        }

        string[] tags = InternalEditorUtility.tags;
        string[] layers = InternalEditorUtility.layers;

        using (StreamWriter writer = new(filePath))
        {
            writer.WriteLine("// Auto-generated by TagAndLayerCodeGenerator");
            // 🔹 Tags
            writer.WriteLine("public static class Tags");
            writer.WriteLine("{");
            foreach (var tag in tags)
            {
                string safeName = tag.Replace(" ", "_");
                writer.WriteLine($" public const string {safeName} = \"{tag}\";");
            }
            writer.WriteLine("}");
            writer.WriteLine();

            // 🔹 Layers
            writer.WriteLine("public static class Layers");
            writer.WriteLine("{");
            foreach (var layer in layers)
            {
                string safeName = layer.Replace(" ", "_");
                int layerIndex = LayerMask.NameToLayer(layer);
                writer.WriteLine($" public const int {safeName} = {layerIndex};");
            }
            writer.WriteLine("}");
        }

        AssetDatabase.Refresh();
    }
}
